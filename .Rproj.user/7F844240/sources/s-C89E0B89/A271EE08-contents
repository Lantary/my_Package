library(rstudioapi)
library(dplyr)
library(stringr)
library(GEOquery)
library(tibble)
library(limma)
library(myPackage)

# 设置工作目录
setwd(dirname(getSourceEditorContext()$path))
getwd()


# 读取数据
GPL <- getGEO(
  filename = '../原始数据/GPL1708.annot',
  AnnotGPL = T
) %>%
  Table() %>%
  dplyr::rename(
    'gene_name' = 'Gene symbol',
    'probe_id' = 'ID'
  )

load('../../../结果/rdata/1.注释信息处理.rdata')


# 构造 mRNA 注释信息
mRNA_annot <- merge(GPL, annotation)

# mRNA_annot <- mRNA_annot[ ,c(1, 4, 32, 33, 2:3, 5:31)]
# mRNA_annot <- mRNA_annot[!duplicated(mRNA_annot$gene_name), ]

origin_data <- getGEO(
  filename = '../原始数据/GSE10195_GPL1708.txt',
  getGPL = F
)


# ====数据处理====

# 提取样本信息以及表达矩阵信息

## 处理样本信息
pd_origin_data <- pData(origin_data) %>%
  dplyr::select(
    sample = geo_accession,
    group = characteristics_ch1
  )

### 分组名不要有空格，limma包会报错
pd_origin_data$group <- pd_origin_data$group %>%
  stringr::str_replace('Non Stenotic', 'Non_Stenotic')


## 处理后的表达矩阵，mRNA表达矩阵
expr_origin_data <- exprs(origin_data) %>%
  as.data.frame() %>%
  tibble::rownames_to_column('probe_id') %>%
  merge(mRNA_annot[, c(1, 2)], .) %>%
  dplyr::select(-'probe_id') %>%    # 删除第一列 probe_id
  aggregate(.~ gene_name, data = ., median) %>%  # 以gene_name作为因子水平，相同的取中位数
  tibble::column_to_rownames(var = 'gene_name') 






# ====limma差异分析====

# 直接从此开始
library(rstudioapi)
library(dplyr)
library(stringr)
library(GEOquery)
library(tibble)
library(limma)

load('../数据模板/2.gse10195_差异表达分析_DM.rdata')

# 构造设计矩阵
design <- model.matrix(~0 + factor(pd_origin_data$group))
colnames(design) <- levels(factor(pd_origin_data$group))
rownames(design) <- rownames(pd_origin_data)

# 模型拟合及分析
contrast_matrix <- makeContrasts("Non_Stenotic-Stenotic", levels = design)
expDiff_result <- limma::lmFit(expr_origin_data, design) %>%
  contrasts.fit(contrast_matrix) %>%
  eBayes() %>%
  topTable(coef = 1, n = Inf) %>%
  na.omit()

expDiff_result_top <- expDiff_result %>%
  dplyr::filter(
    P.Value < 0.005
  )

expDiff_result_target <- expDiff_result %>%
  dplyr::filter(
    rownames(.) %in% c(
      'CASR',
      'VCAM1',
      'AIM2',
      'CASP1',
      'IL1B',
      'IL18'
    )
  )



# 保存结果

## 保存为Rdata格式
picDir <- ''
save_name_rdata <- ''

save(
  expDiff_result,
  expDiff_result_target,
  file = '../结果/差异分析结果/gse10195_差异表达.rdata'
)


## 保存为txt格式
write.table(
  expDiff_result,
  file = '../结果/差异分析结果/gse10195_差异基因.txt',
  sep = '\t',
)

